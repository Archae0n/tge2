namespace = gai_critical_buildings

#Build monuments/temples because the AI wont build them in sectors
planet_event = {
	id = gai_critical_buildings.1
	hide_window = yes
	mean_time_to_happen = {
		months = 6
	}

	trigger = {
		has_owner = yes
		exists = owner
		years_passed > 15
		gai_is_ai = yes
		NOT = { has_global_flag = disable_gai_critical_buildings }
		OR = {
			gai_has_unity_building = NO
			gai_has_growth_building = NO
		}
		owner = {
			is_country_type = default
		}
		any_tile = {
			has_building = no
		}
	}

	immediate = {
		random_tile = {
			limit = {
				AND = {
					owner = {
						NOR = {
							has_ethic = ethic_spiritualist		
							has_ethic = ethic_fanatic_spiritualist
							has_authority = auth_machine_intelligence
						}
					}
					planet = {
						NOT = { is_planet_class = pc_habitat }
						NOR = {
							has_building = building_temple
							has_building = building_holotemple				
							has_building = building_citadel_of_faith
							has_building = building_sacred_nexus
						}
					}
					has_building = no
					has_blocker = no
					NOT = { gai_has_unity_building = yes }
					NOT = { gai_has_sr = yes }
					OR = {
						gai_is_blank = yes 
						gai_build_on_food_okay = yes
					}
					NOT = { any_neighboring_tile = { has_building = building_capital_1 } }
					NOT = { any_neighboring_tile = { has_building = building_colony_shelter } }
				}
			}
			add_building_construction = building_autochthon_monument
		}
		random_tile = {
			limit = {
				AND = {
					owner = {
						OR = {
							has_ethic = ethic_spiritualist		
							has_ethic = ethic_fanatic_spiritualist
						}
					}
					planet = {
						NOT = { is_planet_class = pc_habitat }
						NOR = {
							has_building = building_autochthon_monument
							has_building = building_heritage_site
							has_building = building_hypercomms_forum
							has_building = building_autocurating_vault
						}
					}
					has_building = no
					NOT = { gai_has_sr = yes }
					has_blocker = no
					NOT = { gai_has_unity_building = yes }
					OR = {
						gai_is_blank = yes 
						gai_build_on_food_okay = yes
					}
					NOT = { any_neighboring_tile = { has_building = building_capital_1 } }
					NOT = { any_neighboring_tile = { has_building = building_colony_shelter } }
				}
			}
			add_building_construction = building_temple
		}
		random_tile = {
			limit = {
				AND = {
					owner = { has_authority = auth_machine_intelligence }
					has_building = no
					NOT = { gai_has_sr = yes }
					has_blocker = no
					NOT = { gai_has_unity_building = yes }
					OR = {
						gai_is_blank = yes 
						gai_build_on_food_okay = yes
					}
					NOT = { any_neighboring_tile = { has_building = building_deployment_post } }
					NOT = { any_neighboring_tile = { has_building = building_machine_capital_1 } }
				}
			}
			add_building_construction = building_uplink_node
		}
		random_tile = {
			limit = {
				AND = {
					owner = { has_authority = auth_machine_intelligence }
					has_building = no
					NOT = { gai_has_sr = yes }
					has_blocker = no
					NOT = { has_building = building_spare_parts_depot }
					OR = {
						AND = {
							OR = {
								gai_is_blank = yes 
								gai_build_on_food_okay = yes
							}
							NOT = { any_neighboring_tile = { has_building = building_deployment_post } }
							NOT = { any_neighboring_tile = { has_building = building_machine_capital_1 } }
						}
						gai_has_society = yes
					}
				}
			}
			add_building_construction = building_spare_parts_depot
		}
		random_tile = {
			limit = {
				AND = {
					NOT = { owner = { has_authority = auth_machine_intelligence } }
					has_building = no
					NOT = { gai_has_sr = yes }
					has_blocker = no
					NOT = { has_building = building_clinic }
					OR = {
						AND = {
							OR = {
								gai_is_blank = yes 
								gai_build_on_food_okay = yes
							}
							NOT = { any_neighboring_tile = { has_building = building_capital_1 } }
							NOT = { any_neighboring_tile = { has_building = building_colony_shelter } }
							}
						gai_has_society = yes
					}
				}
			}
			add_building_construction = building_clinic
		}
	}
}


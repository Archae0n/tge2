namespace = cbshing_origins_voidborne_start
# file modifies start planets to be a Voidborne Start
# by cbshing

# Triggers when the game starts
### Change homeworld to Habitat if have Voidborne Civics on Game Start
country_event = {
	id = cbshing_origins_voidborne_start.1
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_cbshing_voidborne_country = yes }

	immediate = {
		#find secondary_species
		random_owned_pop = {
			limit = { NOT = { is_exact_same_species = owner_species } }
			save_event_target_as = voidborne_secondary_species
		}
		#find homeworld and create habitat
		random_owned_planet ={
			limit = { is_capital = yes }
			save_event_target_as = voidborne_capital_planet
			owner.capital_scope.solar_system = {
				spawn_megastructure = { 
					type = habitat_0
					location = event_target:voidborne_capital_planet
					owner = FROMFROM
				}
			}
		}
		#find habitat and populate
		random_planet_within_border ={
			limit = { is_planet_class = pc_habitat }
			save_event_target_as = voidborne_capital_habitat
			reset_start_buildings_and_blockers_voidborne = yes
			set_owner = FROM
			#Create secondary species pops
			if = { 
				limit = { FROM = { is_cbshing_voidborne_country_has_any_secondary_species = yes } }
				every_tile = {
					limit = { 
						has_building = building_hab_astro_mining_facility 
						has_pop = no 
						has_blocker = no
					}
					create_pop = { 
						species = event_target:voidborne_secondary_species
						ethos = random
					}
				}
			}
			#For organic secondary species like Syncretic or Codominant
			if = { 
				limit = { FROM = { is_cbshing_voidborne_country_has_organic_secondary_species = yes } }
				every_tile = {
					limit = { 
						has_building = building_hab_agri_bay 
						has_pop = no 
						has_blocker = no
					}
					create_pop = { 
						species = event_target:voidborne_secondary_species
						ethos = random
					}
				}
			}
			#All other pop types
			every_tile = {
				limit = { has_building = yes has_pop = no has_blocker = no}
				create_pop = { 
					species = owner_species
					ethos = random
				}
			}	
			
			set_capital = yes
		}
		#change species to be voidborne species
		random_owned_pop = {
			limit = { is_exact_same_species = owner_species }
			species = { 
				set_species_homeworld = event_target:voidborne_capital_habitat 
				this = { save_event_target_as = new_voidborne_species }
			}
		}
		every_owned_pop = {
			limit = { is_exact_same_species = owner_species }
			#changes_species = event_target:new_voidborne_species
			modify_species = {
				species = this
				ideal_planet_class = pc_habitat
				base = none # makes this replace parent species
			}
		}
		change_dominant_species = { species = last_created change_all = yes }
		# Nuke other colonies gained from advanced empire, etc
		every_owned_planet = {
			limit = { is_capital = no }
			every_tile = { 
				kill_pop = yes 
				remove_building = yes
			}
		}
		#Nuke old homeworld planet
		random_owned_planet ={
			limit = { is_same_value = event_target:voidborne_capital_planet }
			random_list = {
				18 = { change_pc = pc_barren }
				18 = { change_pc = pc_molten }
				18 = { change_pc = pc_barren_cold }
				18 = { change_pc = pc_toxic }
				18 = { change_pc = pc_frozen }
				5 = { change_pc = pc_broken }
				5 = { change_pc = pc_shattered }
			}
			if = {
				limit = { 
					NOR = {
						is_planet_class = pc_broken
						is_planet_class = pc_shattered
					}
				}
				add_modifier = { modifier = "terraforming_candidate" days = -1 }
			}
		}
		set_country_flag = already_built_habitat
	}
}